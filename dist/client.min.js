function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}(function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b():a.PeerCall=b()})(this,function(){return function(a,b,c,d){this.id=a,this.connection=null,this.socket=b,this.peerconfig={iceServers:c,iceCandidatePoolSize:d};var f=this;this.init=function(a,b){this.connection=new webrtcsupport.PeerConnection(this.peerconfig),this.connection.addEventListener("icegatheringstatechange",function(a){console.log(f.id,"icegatheringstatechange: ",f.connection.iceGatheringState,a)}),this.connection.addEventListener("connectionstatechange",function(a){console.log(f.id,"connectionstatechange: ",f.connection.connectionState,a)}),this.connection.addEventListener("signalingstatechange",function(a){console.log(f.id,"signalingstatechange: ",f.connection.signalingState,a)}),this.connection.addEventListener("iceconnectionstatechange",function(a){console.log(f.id,"iceconnectionstatechange: ",f.connection.iceConnectionState,a)}),a.getTracks().forEach(function(b){f.connection.addTrack(b,a)});var c=new MediaStream;this.connection.addEventListener("track",function(a){a.streams[0].getTracks().forEach(function(a){console.log(f.id,"Add a track to the remoteStream:",a),c.addTrack(a)})}),b(this.id,c),this.connection.addEventListener("icecandidate",function(a){a.candidate&&f.socket.emit("candidate",f.id,a.candidate)})},this.offer=_asyncToGenerator(function*(){var a=yield this.connection.createOffer();yield this.connection.setLocalDescription(a),this.socket.emit("offer",this.id,a)}),this.answer=function(){var a=_asyncToGenerator(function*(a){yield this.connection.setRemoteDescription(new webrtcsupport.SessionDescription(a));var b=yield this.connection.createAnswer();yield this.connection.setLocalDescription(b),this.socket.emit("answer",this.id,{type:b.type,sdp:b.sdp})});return function(){return a.apply(this,arguments)}}(),this.stablish=function(){var a=_asyncToGenerator(function*(a){var b=new webrtcsupport.SessionDescription(a);yield this.connection.setRemoteDescription(b)});return function(){return a.apply(this,arguments)}}(),this.candidate=function(a){this.connection.addIceCandidate(new webrtcsupport.IceCandidate(a))},this.close=function(a){this.connection.close(),a(this.id)}}});
function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}(function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b():a.PeerClient=b()})(this,function(){return function(a){this.config=a,this.socket=null,this.localStream=null,this.connections={},this.config.onUpdateStreamOptions(this.config.streamOptions),webrtcsupport.support&&webrtcsupport.mediaStream||this.config.onUnsupportedWebRTC();var b=this;this.buildClientEvent=function(a,b){this.config.onUserEvent({type:a,room:b})},this.buildRoomEvent=function(a,b,c){this.config.onRoomEvent({type:a,client:b,data:c})},this.initSocket=function(){this.socket=io(a.server),this.socket.on("connect",function(){console.log("Connected IO:",b.socket.id)}),this.socket.on("call",function(a){console.log("CALL",a),b.connections[a]=new PeerCall(a,b.socket,b.config.iceServers,b.config.iceCandidatePoolSize),b.connections[a].init(b.localStream,b.config.onRemoteStreamStart),b.connections[a].offer()}),this.socket.on("offer",function(a,c){console.log("OFFER",a,c),b.connections[a]=new PeerCall(a,b.socket,b.config.iceServers,b.config.iceCandidatePoolSize),b.connections[a].init(b.localStream,b.config.onRemoteStreamStart),b.connections[a].answer(c)}),this.socket.on("answer",function(a,c){console.log("ANSWER",a,c),b.connections[a].stablish(c)}),this.socket.on("hangup",function(a){console.log("HANGUP",a),b.connections[a].close(b.config.onRemoteStreamClose)}),this.socket.on("candidate",function(a,c){console.log("CANDIDATE",a),b.connections[a].candidate(c)}),this.socket.on("created",function(a){b.buildClientEvent("created",a)}),this.socket.on("joined",function(a){b.buildClientEvent("joined",a)}),this.socket.on("left",function(a){b.buildClientEvent("left",a)}),this.socket.on("kicked",function(a){b.buildClientEvent("kicked",a)}),this.socket.on("banned",function(a){b.buildClientEvent("banned",a)}),this.socket.on("unbanned",function(a){b.buildClientEvent("unbanned",a)}),this.socket.on("r_resource",function(a,c){b.buildRoomEvent("resource",a,c)}),this.socket.on("r_message",function(a,c){b.buildRoomEvent("message",a,c)}),this.socket.on("r_joined",function(){var a=_asyncToGenerator(function*(a){b.buildRoomEvent("joined",a)});return function(){return a.apply(this,arguments)}}()),this.socket.on("r_left",function(a){b.buildRoomEvent("left",a)}),this.socket.on("r_kicked",function(a){b.buildRoomEvent("kicked",a)}),this.socket.on("r_banned",function(a){b.buildRoomEvent("banned",a)}),this.socket.on("r_unbanned",function(a){b.buildRoomEvent("unbanned",a)})},this.initUserMedia=_asyncToGenerator(function*(){var a,b=this.config.streamConstraints.video||!1,c=this.config.streamConstraints.audio||!1,d=!1;try{a=yield navigator.mediaDevices.getUserMedia({video:b,audio:c})}catch(f){try{a=yield navigator.mediaDevices.getUserMedia({video:!1,audio:c}),d="camera"}catch(c){try{a=yield navigator.mediaDevices.getUserMedia({video:b,audio:!1}),d="microphone"}catch(a){console.error(a),d="both"}}}!1!==d&&(this.config.onPermissionDenied(d),"both"==d)||(this.updateUserMedia(),this.localStream=a,this.config.onLocalStream(a))}),this.updateUserMedia=function(){if(null!==this.localStream){if("undefined"!=typeof this.localStream.getVideoTracks){var a=this.localStream.getVideoTracks();"undefined"!=typeof a[0]&&(a[0].enabled=this.config.streamOptions.video)}if("undefined"!=typeof this.localStream.getAudioTracks){var b=this.localStream.getAudioTracks();"undefined"!=typeof b[0]&&(b[0].enabled=this.config.streamOptions.microphone)}}this.config.onUpdateStreamOptions(this.config.streamOptions)},this.toggleCam=function(){this.config.streamOptions.video=!this.config.streamOptions.video,this.updateUserMedia()},this.toggleMicrophone=function(){this.config.streamOptions.microphone=!this.config.streamOptions.microphone,this.updateUserMedia()},this.toggleAudio=function(){this.config.streamOptions.audio=!this.config.streamOptions.audio,this.updateUserMedia()},this.createRoom=function(a,b){this.socket.emit("create",a,b)},this.joinRoom=function(a,b){this.socket.emit("join",a,b)},this.sendMessage=function(a){this.socket.emit("message",a)}}});
(function(a){if("function"==typeof bootstrap)bootstrap("webrtcsupport",a);else if("object"==typeof exports)module.exports=a();else if("function"==typeof define&&define.amd)define(a);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeWebrtcsupport=a}else"undefined"==typeof window?global.webrtcsupport=a():window.webrtcsupport=a()})(function(){return function(a,b,c){function d(c,f){if(!b[c]){if(!a[c]){var g="function"==typeof require&&require;if(!f&&g)return g(c,!0);if(e)return e(c,!0);throw new Error("Cannot find module '"+c+"'")}var h=b[c]={exports:{}};a[c][0].call(h.exports,function(b){var e=a[c][1][b];return d(e?e:b)},h,h.exports)}return b[c].exports}for(var e="function"==typeof require&&require,f=0;f<c.length;f++)d(c[f]);return d}({1:[function(a,b){var c,d=!1,e=!1,f=window.navigator.userAgent.toLowerCase();-1===f.indexOf("firefox")?-1!==f.indexOf("chrome")&&(c="webkit",d=!0):(c="moz",e=!0);var g=window.mozRTCPeerConnection||window.webkitRTCPeerConnection,h=window.mozRTCIceCandidate||window.RTCIceCandidate,i=window.mozRTCSessionDescription||window.RTCSessionDescription,j=window.webkitMediaStream||window.MediaStream,k=window.navigator.userAgent.match("Chrome")&&26<=parseInt(window.navigator.userAgent.match(/Chrome\/(.*) /)[1],10),l=window.webkitAudioContext||window.AudioContext;b.exports={support:!!g,dataChannel:d||e||g&&g.prototype&&g.prototype.createDataChannel,prefix:c,webAudio:!!(l&&l.prototype.createMediaStreamSource),mediaStream:!!(j&&j.prototype.removeTrack),screenSharing:!!k,AudioContext:l,PeerConnection:g,SessionDescription:i,IceCandidate:h}},{}]},{},[1])(1)});